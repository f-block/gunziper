prefix=prefix, e.g. param name, which has to be removed before processing and added before sending
regex=Regex containing a regex group, marking the part to be replaced (e.g. abcd([0-9]+)   so all digits after the string abcd will be replaced)
replaceString=ReplaceString
replaceToolName=Toolname (e.g. repeater or intruder, respectively: repeater,intruder... for multiple tools)
relevantReplaceRequestRegex=Regex for identifying relevant requests for replacement
relevantStaticInsertionRequestRegex=Regex for identifying relevant requests for insertion
regexForNewReplaceStringFromResponseExtraction=Regex for extraction of new ReplaceString from current response (matching group 1)
csvDoingString=comma separated list of processings; available methods: 
relevantResponseRegex=regex identifying relevant responses
relevantResquestRegex=regex identifying relevant requests
responseToolName=Toolname (e.g. repeater or intruder, respectively: repeater,intruder... for multiple tools)
requestToolName=Toolname (e.g. repeater or intruder, respectively: repeater,intruder... for multiple tools)
staticInsertString=start value or static string
staticInsertMarkerString=insertion point identifier
staticInsertToolname=Toolname (e.g. repeater or intruder, respectively: repeater,intruder... for multiple tools)
staticInsertResponseExtractionRegex=Regex for extraction of new InsertionString from current response (matching group 1)
relevantRequestRegexForStaticResponseExtraction=Regex identifying relevant request OR response for response extraction (mostly needed with active request unpacking, must match on the packed request, or if string has to be extracted from another response; otherwise use the same as for static insertion request matching) 
relevantRequestRegexForReplaceResponseExtraction=Regex identifying relevant request OR response for response extraction (mostly needed with active request unpacking, must match on the packed request, or if string has to be extracted from another response;; otherwise use the same as for replace request matching)
replaceResponseExtractionMatchingNumber=the first, second or $NUMBER match (must be an integer value, default would be 1 for first match, resp. -1 for the last match)
staticResponseExtractionMatchingNumber=the first, second or $NUMBER match (must be an integer value, default would be 1 for first match, resp. -1 for the last match)
invalidMatchingNumber=Invalid Matching Number Format (has to be an integer)
errorOccured=Error Occured
nogzip=Not a valid gzip format
invalid.number.of.debug.lines=Invalid number of debug lines
debug.mode=Debug Mode
replacement.is.done.on.current.request.with.the.following.replacement.string=replacement is done on current request with the following replacement string: 
replacement.is.not.done.on.current.request.as.replacement.regex.does.not.match.on.any.part.in.request=replacement is not done on current request as replacement regex does not match on any part in request
current.request.gets.packed.and.a.prefix.is.added=current request gets packed and a prefix is added
insertion.is.done.on.current.request.with.the.following.insertion.string=insertion is done on current request with the following insertion string: 
prefix.is.stripped.from.current.request.before.unpacking=prefix is stripped from current request before unpacking
the.following.new.replace.string.has.been.extracted.from.the.current.response=the following new replace string has been extracted from the current response: 
the.following.new.static.insert.string.has.been.extracted.from.the.current.response=the following new static insert string has been extracted from the current response: 
no.new.replace.or.static.insert.string.could.be.extracted.from.the.current.response=no new replace or static insert string could be extracted from the current response
the.relevant.request.regex.matches.for.replacement.on.the.current.request=the current request gets replaced
the.current.request.gets.not.replaced.due.to.not.matching.relevant.request.regex.or.wrong.invoking.tool=the current request gets not replaced due to not matching relevant request regex or wrong invoking tool
the.relevant.request.regex.matches.for.insertion.on.the.current.request=the relevant request regex matches for insertion on the current request
insertion.is.not.done.on.current.request.due.to.not.matching.relevant.request.regex.or.wrong.invoking.tool=insertion is not done on current request due to not matching relevant request regex or wrong invoking tool
current.request.gets.unpacked=current request gets unpacked
current.request.gets.packed=current request gets packed
current.request.gets.not.packed.for.sending.due.to.not.matching.relevant.request.regex.or.wrong.invoking.tool=current request gets not packed for sending due to not matching relevant request regex or wrong invoking tool
current.request.gets.not.unpacked.for.sending.due.to.not.matching.relevant.request.regex.or.wrong.invoking.tool=current request gets not unpacked for sending due to not matching relevant request regex or wrong invoking tool
current.request.gets.not.packed.or.unpacked.due.to.not.matching.relevant.request.regex.or.wrong.invoking.tool=current request gets not packed or unpacked due to not matching relevant request regex or wrong invoking tool
current.response.gets.unpacked=current response gets unpacked
current.response.gets.not.unpacked.due.to.not.matching.relevant.response.regex.or.wrong.invoking.tool=current response gets not unpacked due to not matching relevant response regex or wrong invoking tool
the.relevant.request.regex.for.the.response.replace.string.extraction.matches.on.the.current.request=the relevant request regex for the response replace string extraction matches on the current request or response
the.relevant.request.regex.for.the.response.insertion.string.extraction.matches.on.the.current.request=the relevant request regex for the response insertion string extraction matches on the current request
new.replace.string.gets.not.extracted.from.current.response.due.to.not.matching.relevant.extraction.request.regex.or.wrong.invoking.tool=new replace string gets not extracted from current response due to not matching relevant extraction request regex or wrong invoking tool
new.insertion.string.gets.not.extracted.from.current.response.due.to.not.matching.relevant.extraction.request.regex.or.wrong.invoking.tool=new insertion string gets not extracted from current response due to not matching relevant extraction request regex or wrong invoking tool
current.request.gets.not.unpacked.due.to.not.matching.relevant.request.regex.or.wrong.invoking.tool=current request gets not unpacked due to not matching relevant request regex or wrong invoking tool
the.csv.doing.string.contains.at.least.one.wrong.value=The CSV doing string contains at least one wrong value:
the.csv.doing.string.contains.no.processing.string.at.all=The csv doing string contains no processing string at all
number.of.debug.lines=Number of Debug lines
a.regex.matching.the.request.that.should.be.dropped=a regex matching the proxy request(s) that should be dropped
current.request.has.not.been.dropped.due.to.not.matching.regex=current request has not been dropped due to not matching regex
current.request.has.been.dropped=current request has been dropped
replacement.is.not.done.on.current.request.as.replacement.regex.is.invalid=replacement is not done on current request as replacement regex is invalid
relevant.request.regex.is.invalid=relevant request regex is invalid: 
regex.for.response.extraction.is.invalid=regex for response extraction is invalid: 
drop.request.regex.is.invalid=drop request regex is invalid
insertion.is.not.done.on.current.request.as.the.given.insertion.pointer.cannot.be.found=insertion is not done on current request as the given insertion pointer cannot be found
no.regex.group.could.be.found.within.the.response.extraction.regex=no regex group could be found within the response extraction regex: 
no.regex.group.could.be.found.within.the.replace.regex=no regex group could be found within the replace regex
regex.based.search_debug.window=regex based search (autoscrolling is allways active, so for following the newest debug message just use   $   )
regex.based.search_regex.test=regex based search (autoscrolling is allways active, the first regex group will be highlighted with a seperate color)
a.regex.matching.the.unpacked.request.that.should.be.packed.before.sending=a regex matching the unpacked request that should be packed before sending
a.regex.marking.the.relevant.part.within.the.request.which.should.be.unpacked=a regex containing one regex group, marking the relevant part within the request which should be unpacked
a.regex.marking.the.relevant.part.within.the.response.which.should.be.unpacked=a regex containing one regex group, marking the relevant part within the response which should be unpacked
no.regex.group.could.be.found.within.the.regex.marking.the.message.part.which.should.be.unpacked=no regex group could be found within the regex marking the message part which should be unpacked
no.regex.group.could.be.found.within.the.regex.marking.the.message.part.which.should.be.packed=no regex group could be found within the regex marking the message part which should be packed
unpacking.has.not.been.done.on.current.message.as.the.regex.marking.the.message.part.didnt.match=unpacking has not been done on current message as the regex marking the message part didnt match
packing.has.not.been.done.on.current.message.as.the.regex.marking.the.message.part.didnt.match=packing has not been done on current message as the regex marking the message part didnt match
unpacking.has.been.done.on.current.message=unpacking has been done on current message
packing.has.been.done.on.current.message=packing has been done on current message
unpacking.has.not.been.done.on.current.message.as.the.regex.marking.the.message.part.is.invalid=unpacking has not been done on current message as the regex marking the message part is invalid
packing.has.not.been.done.on.current.message.as.the.regex.marking.the.message.part.is.invalid=packing has not been done on current message as the regex marking the message part is invalid
invalidStartNumber=The given start number is invalid
save.settings=Save Settings
load.settings=Load Settings
set=Set first RequestNumber
addRegex=Add Regex
there.was.no.response=There was no Response
path.to.payload.list=Path to payload list
the.file.path.to.the.payload.list=The file path pointing to the payload list
load.payloadlist=Load payloadlist
show.license=Show Licenses
process.request.and.send.to.repeater=Process request and send to repeater
process.request.and.send.to.intruder=Process request and send to intruder
display.unpacked.message=Display unpacked message
display.packed.message=Display packed message
choose.the.desired.action=Choos the desired Action
intruder.comparer.options=Intruder Comparer options
start.the.intruder.comparer=Start the Intruder Comparer
a.regex.containing.a.regex.group.marking.the.textarea.which.should.not.be.included.on.difference.computation=a regex containing a regex group marking the textarea which should not be included on difference computation; leave empty to not exclude anything
include.http.header.in.all.comparisons=Include HTTP header in all comparisons
no.regex.group.could.be.found.within.the.regex=no regex group could be found within the regex
the.regex.for.comparer.exclusion.is.invalid=the regex for comparer exclusion is invalid
regex.is=Regex is: 
valid=Valid
invalid=Invalid
info=Info
neither.request.nor.response.unpacking.has.been.configured.within.set.variables=Neither request nor response unpacking has been configured within "gunziper Config"
at.least.one.regex.group.is.needed=at least one regex group is needed
gunziper.config=gunziper Config
something.went.wrong.with.the.supplied.regex.for.intruder.comparer.for.exclusion.on.request.number=something went wrong with the supplied regex for intruder comparer for exclusion on request number: 
do.a.diff.like.comparison=Do a diff like comparison
request.unpacking=Request Unpacking
response.unpacking=Response Unpacking
match.replace=Match/Replace
debug.mode=Debug Mode
request.dropping=Request dropping
choose.what.to.include.on.saving=Choose what to include on saving
include.request.header=Include Request Header
include.request.body=Include Request Body
include.response.header=Include Response Header
include.response.body=Include Response Body
exclude.parts.of.messages.based.on.reqex=Exclude parts of messages based on reqex
a.regex.containing.a.regex.group.marking.the.textarea.which.should.not.be.included.on.saving=a regex containing a regex group marking the textarea which should not be included on saving
save=Save
the.regex.for.exclusion.is.invalid=The Regex for exclusion is invalid
include.url.in.file=Include URL in File
use.richtext.style=Use RichText Syntax (DocGen)
use.markdown.style=Use Markdown Syntax (DocGen 2.0)
use.incrementing.filenames=Use incrementing filenames
misc=Misc
help=Help
tool.scope=Tool scope (e.g.   repeater,proxy,intruder  )
regex.identifying.requests.in.scope.for.processing=Regex identifying requests in scope for processing (e.g.:  ^POST /path/index.php )
regex.identifying.requests.in.scope.after.processing=If the "unpacking" modifies the "in-scope" part of the request, supply here another regex
regex.marking.the.part.for.unpacking=Regex marking the part for unpacking using regex group. e.g. for whole body:  \r\n\r\n(.*) 
comma.separated.list.of.processings=Comma separated list of processings (e.g.: urlDecode,base64Decode,deserializeJavaObject )
regex.text=Regex Test
configuration.part.for.response.extraction=Configuration part for request/response extraction
invert.match.indicates.non.relevance=Invert: the regex defines requests which are NOT in scope
regex.identifying.responses.in.scope.for.processing=Regex identifying Responses in scope for processing
static.insertion=Static Insertion
activate.processing.of.the.replace.string=activate processing of the replace string
save.current.settings=Save current Settings
produce.delay=Produce a delay
the.specified.macro.index.for.match.and.replacement.doesnt.exist=The specified macro index for match and replacement doesn't exist: 
intruder.comparer=Intruder Comparer
invalid.response.extraction.number=Invalid Response extraction number
invalid.number.for.a.delay.in.milliseconds.for.the.session.handling.action=Invalid number for a delay in milliseconds for the session handling action
set.values=Save Settings
include.marked.request.parts.in.file=Include marked request parts in file
include.marked.response.parts.in.file=Include marked response parts in file
no.compatible.request.response.parts.have.been.selected=No compatible request/response parts have been selected. E.g. an element from the proxy history, or scan issues
info.more.than.ten.messages.selected.proceed=Info: More than 10 Messages selected. Proceed?
info.more.than.ten.messages.selected.should.the.save.mode.be.changed..to.incrementing.filenames=Info: More than 10 Messages selected. Should the save mode be changed to incrementing filenames?
the.specified.file.couldnt.be.found=The specified file couldn't be found
couldnt.write.to.specified.file=Couldn't write to specified file
couldnt.read.from.specified.file=Couldn't read from specified file
something.seems.wrong.with.the.specified.file.to.load.values.from=Something seems wrong with the specified file to load values from
the.specified.file.seems.not.to.contain.a.known.class.type=The specified file seems not to contain a known class type
do.only.the.processings.on.the.marked.part.and.dont.insert.the.replace.string=do only processings on marked part
do.the.replacement.after.unpacking.the.request=do the replacement after unpacking the request
do.the.extraction.after.unpacking.the.response=do the extraction after unpacking the response
activate.this.rule.globally=activate this rule globally
response.extraction.toolnames=Toolname which should be watched for response extraction (e.g. repeater or intruder, respectively: repeater,intruder... for multiple tools)
trying.to.restore.saved.burp.file=trying to restore saved burp file
no.recognized.action.could.be.identified=no recognized action could be identified
no.burp.file.for.restore.has.been.provided=no burp file for restore has been provided
burp.restore.finished=burp restore finished
include.pocfile.separators=Include PoCfile separators
include.pocfile.separators.this.switch.can.be.helpful.to.create.a.poclist.for.a.report.not.containing.any.request.or.responses=Include pocfile separators: This switch can be helpful to create a poclist for a report - not containing any request or responses
include.responsible.parameters.if.applicable=Include responsible parameters - if applicable
setting.base.dir.to=Setting base dir to: 
no.base.dir.specified=No base dir specified
trying.to.load.settings.from=Trying to load settings from: 
no.settings.file.specified=No settings file specified
seems.like.it.worked=Seems like it worked
save.everything.in.one.file=Save everything in one file
something.went.wrong.while.loading.saved.values=Something went wrong while loading saved values
the.saved.values.might.be.from.an.older.gunziper.version=The saved values might be from an older gunziper version
the.specified.file.doesnt.contain.a.savedValues.object.for.gunziper.or.originates.from.an.older.version=The specified file doesnt contain a savedValues object for gunziper or originates from an older version
done=done
something.went.wrong.while.trying.to.get.the.responsible.parameter.from.the.scanner.finding.description.this.might.be.the.case.because.this.finding.description.is.not.yet.included.within.gunziper.either.just.drop.me.an.email.or.try.saving.the.pocs.without.the.responsible.parameter.option=Something went wrong while trying to get the responsible parameter from the scanner finding description. This might be the case because this finding description is not yet included within gunziper. Either just drop me an email or try saving the pocs without the responsible parameter option
extract.new.string.from.request.instead.from.response=Extract new String from Request instead from response
activate.unique.mode=Activate unique mode
include.parameter.values=Include parameter values
include.cookies=Include cookies
include.cookie.values=Include cookie values
asv.list.of.params.which.should.be.excluded.from.the.unique.comparison=Ampersand Separated Values list of params which should be excluded from the unique comparison
ignore.only.values.for.excluded.parameters=Ignore for excluded parameters only their values
exclude.protocol.from.comparison=Exclude protocol from comparison
exclude.host.from.comparison=Exclude host from comparison
exclude.http.method.from.comparsion=Exclude HTTP method from comparsion
include.the.parameters.from.the.list.only.instead.of.excluding.them=Include the parameters from the list ONLY, instead of excluding them
sync.views=Sync views
interactive.mode=Interactive Mode
do.google.diff.instead.of.java.diff=Do google-diff instead of java-diff-utils
might.be.faster.under.some.circumstances.but.sometimes.also.10.times.slower.google.diff.returns.count.of.different.chars.instead.of.lines=Might be faster under some circumstances but sometimes also 10 times slower. Google-diff returns count of different chars instead of lines
do.diff.like.comparison.each.time.also.against.first.response=Do diff like comparison each time also against first response
approximately.doubles.the.runtime=Approximately doubles the runtime
at.least.one.request.seems.to.be.null=At least one request seems to be null
neither.new.element.nor.identifier.string.must.be.empty=Neither new element nor identifier string must be empty
identifier.already.exists.overwrite=Identifier already exists. Overwrite?
add.new.item.to.dropdown=Add new item to dropdown list
enter.identifier.for.new.item=Enter identifier for new item
abort.the.whole.comparison.process=Abort the whole comparison process
next.comparison=Next comparison
use.line.indexes=Use Line Indexes
use.right.textarea.for.search=Use right textarea for search
options=Options
got.only.one.response.send.the.remaining.ones.by.using.the.gcomparer.again=Got only one response. Send the remaining ones by using the gComparer again
an.error.occured.during.deserialization=An error occured during deserialization: 
an.error.occured.during.serialization=An error occured during serialization: 
an.error.occured.while.deflating=An error occured while deflating: 
an.error.occured.while.inflating=An error occured while inflating: 
replace.it.with.this.string.with.number.iteration.supply.first.number=Replace it with this string. With number iteration, supply first number.
replace.either.all.or.only.the.first.match=Replace either all or only the first match
number.iterator.increments.the.supplied.number.by.one.on.each.request.response.extraction.extracts.the.next.replace.string.from.responses.see.bottom=Number iterator increments the supplied number by one on each request. Response extraction extracts the next replace string from responses. See bottom.
see.help.tab.on.the.gunziper.tab.for.more.information=See help tab on the gunziper tab for more information
this.will.prevent.any.replacement.of.the.marked.part.by.the.replace.string.but.only.does.a.processing.of.it=This will prevent any replacement of the marked part by the replace string, but only does a processing of it
this.is.necessary.if.the.part.to.be.replaced.is.in.an.packed.area.defined.within.the.request.unpacking.tab=This is necessary, if the part to be replaced is in an packed area defined within the request unpacking tab
only.relevant.when.using.response.extraction.see.match.replace.part=Only relevant when using response extraction. See Match/Replace Part
defines.whether.the.scope.regex.is.applied.on.the.request.or.response=Defines, whether the scope regex is applied on the request or response
regex.containing.a.regex.group.marking.the.part.which.should.be.extracted.from.the.response.or.request=Regex containing a regex group, marking the part which should be extracted from the response (or request).
extract.the.new.replace.string.from.requests.instead.from.responses=Extract the new replace string from requests instead from responses
the.standard.value.should.be.fine.for.most.scenarios.it.defines.which.match.is.used=The standard value (1) should be fine for most scenarios. It defines, which match is used (the first, or second, ...)
if.response.unpacking.is.defined.this.can.be.used.if.the.relevant.part.to.extract.is.packed=If Response Unpacking is defined, this can be used, if the relevant part to extract is packed.
an.error.occured.the.documentation.is.not.available.this.shouldn't.happen.just.contact.the.author.of.the.plugin.and.ask.him.what.the.fu...he.has.done.this.time=An error occured. The documentation is not available. This shouldn't happen. Just contact the author of the plugin and ask him what the fu** he has done this time.
gunziper.documentation=Gunziper Documentation
done.saving=Done saving.
deserialization=Java Deserialization
request.packing.for.intruder=Request (Un)Packing for Intruder/Scanner
for.usage.within.intruder.scanner.and.so.on.resp.real.modification.see.match.replace.tab=For usage within intruder/scanner and so on, resp. real modification see Match/Replace tab
this.module.just.adds.an.additional.view.to.proxy.and.repeater.but.does.no.real.modification=This module just adds an additional view to proxy and repeater for manual modification, but doesn't that automatic/live (->Match/Replace)
exclude.parts.of.the.selected.request.response.parts=Exclude parts of the selected Request/Response parts (Regex groups mark parts to delete)
no.regex.group.could.be.found.within.the.regex=No regex group could be found within the regex: 
do.comparison.on.unpacked.responses=Do comparison on unpacked responses
error.occured=Error Occured
there.are.no.messages.to.save=There are no messages to save